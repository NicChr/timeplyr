% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calendar.R
\name{calendar}
\alias{calendar}
\alias{add_calendar}
\alias{create_calendar}
\title{Create a table of common time units from a date or datetime sequence.}
\usage{
calendar(
  x,
  label = TRUE,
  week_start = getOption("lubridate.week.start", 1),
  fiscal_start = getOption("lubridate.fiscal.start", 1),
  name = "time"
)

add_calendar(
  data,
  time = NULL,
  label = TRUE,
  week_start = getOption("lubridate.week.start", 1),
  fiscal_start = getOption("lubridate.fiscal.start", 1)
)

create_calendar(
  from,
  to,
  by,
  length.out = NULL,
  seq_type = c("auto", "duration", "period"),
  roll_month = "preday",
  roll_dst = "pre",
  tz,
  label = TRUE,
  floor_date = FALSE,
  week_start = getOption("lubridate.week.start", 1),
  fiscal_start = getOption("lubridate.fiscal.start", 1),
  name = "time"
)
}
\arguments{
\item{x}{date or datetime vector.}

\item{label}{Logical. Should labeled (ordered factor) versions of
week day and month be returned? Default is \code{TRUE}.}

\item{week_start}{day on which week starts following ISO conventions - 1
means Monday, 7 means Sunday (default). When \code{label = TRUE},
this will be the first level of the returned factor.
You can set lubridate.week.start option to control this parameter globally.}

\item{fiscal_start}{Numeric indicating the starting month of a fiscal year.}

\item{name}{Name of date/datetime column.}

\item{data}{A data frame.}

\item{time}{Time variable.}

\item{from}{Start date/datetime of sequence.}

\item{to}{End date/datetime of sequence.}

\item{by}{Unit increment of the sequence.}

\item{length.out}{Length of the sequence.}

\item{seq_type}{If "auto", \code{periods} are used for
the time expansion when days, weeks, months or years are specified, and \code{durations}
are used otherwise.}

\item{roll_month}{Control how impossible dates are handled when
month or year arithmetic is involved.
Options are "preday", "boundary", "postday", "full" and "NA".
See \code{?timechange::time_add} for more details.}

\item{roll_dst}{See \code{?timechange::time_add} for the full list of details.}

\item{tz}{Timezone of returned time sequence.}

\item{floor_date}{Should \code{from} be floored to the nearest unit specified through the \code{by}
argument? This is particularly useful for starting sequences at the beginning of a week
or month for example.}
}
\value{
An object of class \code{tibble}.
}
\description{
Create a table of common time units from a date or datetime sequence.
}
\examples{
library(timeplyr)
library(lubridate)

# Create a calendar for the current year
from <- floor_date(today(), unit = "year")
to <- ceiling_date(today(), unit = "year", change_on_boundary = TRUE) - days(1)

calendar <- create_calendar(from, to, by = "day")
calendar

# Create any unit time sequence tables
create_calendar(from, to, by = "week")
create_calendar(from, to, by = "month")
create_calendar(from, to, by = "quarter")
create_calendar(from, to, by = "year")

# Or alternatively using calendar()
my_seq <- time_seq(from, to, by = "day")
calendar(my_seq)

}
