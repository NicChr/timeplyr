% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/group_id.R
\name{group_id}
\alias{group_id}
\alias{add_group_id}
\alias{row_id}
\alias{add_row_id}
\alias{group_order}
\alias{add_group_order}
\title{These functions have been superseded by fastplyr functions}
\usage{
group_id(
  data,
  ...,
  order = TRUE,
  ascending = TRUE,
  .by = NULL,
  .cols = NULL,
  as_qg = FALSE
)

add_group_id(
  data,
  ...,
  order = TRUE,
  ascending = TRUE,
  .by = NULL,
  .cols = NULL,
  .name = NULL,
  as_qg = FALSE
)

row_id(data, ..., ascending = TRUE, .by = NULL, .cols = NULL)

add_row_id(data, ..., ascending = TRUE, .by = NULL, .cols = NULL, .name = NULL)

group_order(data, ..., ascending = TRUE, .by = NULL, .cols = NULL)

add_group_order(
  data,
  ...,
  ascending = TRUE,
  .by = NULL,
  .cols = NULL,
  .name = NULL
)
}
\arguments{
\item{data}{A data frame or vector.}

\item{...}{Additional groups using tidy \code{data-masking} rules. \cr
To specify groups using \code{tidyselect}, simply use the \code{.by} argument.}

\item{order}{Should the groups be ordered?
\bold{THE PHYSICAL ORDER OF THE DATA IS NOT CHANGED.} \cr
When order is \code{TRUE} (the default) the group IDs will be
ordered but not sorted.\cr
The expression
\preformatted{
identical(order(x, na.last = TRUE),
          order(group_id(x, order = TRUE)))
}
or in the case of a data frame
\preformatted{
identical(order(x1, x2, x3, na.last = TRUE),
          order(group_id(data, x1, x2, x3, order = TRUE)))
}
should always hold.\cr
If \code{FALSE} the order of the group IDs will be based on first appearance.}

\item{ascending}{Should the group order be ascending or descending?
The default is \code{TRUE}. \cr
For \code{row_id()} this determines if the row IDs are increasing or decreasing. \cr
\bold{NOTE} - When \code{order = FALSE}, the \code{ascending} argument is
ignored. This is something that will be fixed in a later version.}

\item{.by}{Alternative way of supplying groups using \code{tidyselect} notation.}

\item{.cols}{(Optional) alternative to \code{...} that accepts
a named character vector or numeric vector.
If speed is an expensive resource, it is recommended to use this.}

\item{as_qg}{Should the group IDs be returned as a
collapse "qG" class? The default (\code{FALSE}) always returns
an integer vector.}

\item{.name}{Name of the added ID column which should be a
character vector of length 1.
If \code{.name = NULL} (the default),
\code{add_group_id()} will add a column named "group_id",
and if one already exists, a unique name will be used.}
}
\value{
An integer vector.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}}
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#superseded}{\figure{lifecycle-superseded.svg}{options: alt='[Superseded]'}}}{\strong{[Superseded]}}

These functions can now be found in fastplyr. \cr
They are no longer recommended in this package and thus have been both
deprecated and superseded.
}
