% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/time_ggplot.R
\name{time_ggplot}
\alias{time_ggplot}
\title{Quick time-series ggplot}
\usage{
time_ggplot(data, time, value, group = NULL, facet = FALSE, ...)
}
\arguments{
\item{data}{A data frame}

\item{time}{Time variable using \code{tidyselect}.}

\item{value}{Value variable using \code{tidyselect}.}

\item{group}{(Optional) Group variable using \code{tidyselect}.}

\item{facet}{When groups are supplied, should multi-series be
plotted separately or on the same plot?
Default is \code{FALSE}, or together.}

\item{...}{Further arguments passed to \code{geom_line()}.}
}
\description{
\code{time_ggplot()} is a neat way to quickly
plot aggregate time-series data.
}
\examples{
library(dplyr)
library(timeplyr)

# It's as easy as this
AirPassengers \%>\%
  ts_as_tibble() \%>\%
  time_ggplot(time, value)

# And this
EuStockMarkets \%>\%
  ts_as_tibble() \%>\%
  time_ggplot(time, value, group)

\dontrun{
# xts example
data(sample_matrix, package = "xts")
sample.xts <- xts::as.xts(sample_matrix)
sample.xts \%>\%
  ts_as_tibble() \%>\%
  time_ggplot(time, value, group)

# timeSeries example
timeSeries::MSFT \%>\%
  ts_as_tibble() \%>\%
  time_ggplot(time, value, group, facet = TRUE)
}
#'
# An example using raw data

ebola <- outbreaks::ebola_sim$linelist
ebola \%>\%
  time_count(date_of_infection) \%>\%
  time_ggplot(date_of_infection, n)
}
