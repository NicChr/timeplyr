% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/duplicate_rows.R
\name{duplicate_rows}
\alias{duplicate_rows}
\title{Find duplicate rows}
\usage{
duplicate_rows(
  data,
  ...,
  .keep_all = FALSE,
  .both_ways = FALSE,
  .keep_na = TRUE,
  .by = NULL
)
}
\arguments{
\item{data}{A data frame.}

\item{...}{Variables used to find duplicate rows.}

\item{.keep_all}{If \code{TRUE} then all columns of data frame are kept, default is \code{FALSE}.}

\item{.both_ways}{If \code{TRUE} then duplication is kept from both sides, default is \code{FALSE}.
If set to \code{FALSE} this is equivalent to \code{anti_join(df, distinct(df))}.}

\item{.keep_na}{If \code{FALSE} then rows with all \code{NA} values are removed before
finding duplicates. The default is \code{TRUE}.}

\item{.by}{(Optional). A selection of columns to group by for this operation.
Columns are specified using tidy-select.}
}
\description{
This is a simple wrapper around \code{distinct}
and \code{anti_join} to return duplicate rows.
It basically returns all the records that \code{distinct()}
doesn't return and works very similarly to \code{distinct()}.
It is considerably faster than janitor's \code{get_dupes()},
particularly for large data frames. It is also group-aware
and leaves \code{dplyr} groups intact.
To replicate janitor's \code{get_dupes()} functionality,
set \code{.both_ways = TRUE} and use \code{dplyr::add_count(...)}.
}
\examples{
library(dplyr)
library(timeplyr)
library(nycflights13)

# Duplicates across all columns
flights \%>\%
  duplicate_rows()
# Duplicate flights with the same tail number and departure time
flights \%>\%
  duplicate_rows(tailnum, dep_time)
# Can use tidyverse select notation
flights \%>\%
  duplicate_rows(across(contains("dep_time")), .keep_all = FALSE)
# Similar to janitor::get_dupes()
flights \%>\%
  duplicate_rows(tailnum, dep_time, .keep_all = FALSE) \%>\%
  fadd_count(tailnum, dep_time)
# For every day were there multiple flights that departed at the same time?
flights \%>\%
  group_by(year, month, day) \%>\%
  duplicate_rows(dep_time, arr_time, .both_ways = TRUE)
}
