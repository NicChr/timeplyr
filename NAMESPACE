# Generated by roxygen2: do not edit by hand

S3method(format,time_period)
S3method(frename,data.frame)
S3method(frename,data.table)
S3method(frename,grouped_df)
S3method(fselect,data.frame)
S3method(fselect,data.table)
S3method(fselect,grouped_df)
S3method(group_collapse,data.frame)
S3method(group_collapse,default)
S3method(group_collapse,factor)
S3method(group_collapse,grouped_df)
S3method(group_id,"NULL")
S3method(group_id,GRP)
S3method(group_id,Interval)
S3method(group_id,data.frame)
S3method(group_id,default)
S3method(group_id,factor)
S3method(group_id,grouped_df)
S3method(group_order,Interval)
S3method(group_order,data.frame)
S3method(group_order,default)
S3method(group_order,grouped_df)
S3method(interval_count,time_interval)
S3method(interval_end,Interval)
S3method(interval_end,time_interval)
S3method(interval_length,time_interval)
S3method(interval_range,time_interval)
S3method(interval_start,Interval)
S3method(interval_start,time_interval)
S3method(missing_dates,data.frame)
S3method(missing_dates,default)
S3method(n_missing_dates,data.frame)
S3method(n_missing_dates,default)
S3method(print,time_period)
S3method(roll_diff,data.frame)
S3method(roll_diff,default)
S3method(roll_diff,time_interval)
S3method(roll_lag,data.frame)
S3method(roll_lag,default)
S3method(roll_lag,time_interval)
S3method(row_id,data.frame)
S3method(row_id,default)
S3method(row_id,grouped_df)
S3method(time_by_span,time_tbl_df)
S3method(time_by_units,time_tbl_df)
S3method(time_by_var,time_tbl_df)
S3method(ts_as_tibble,default)
S3method(ts_as_tibble,mts)
S3method(ts_as_tibble,timeSeries)
S3method(ts_as_tibble,xts)
S3method(ts_as_tibble,zoo)
export(.duration_units)
export(.extra_time_units)
export(.period_units)
export(.roll_na_fill)
export(.stat_fns)
export(.time_units)
export(YM)
export(YQ)
export(add_group_id)
export(add_group_order)
export(add_row_id)
export(age_months)
export(age_years)
export(asc)
export(calendar)
export(crossed_join)
export(desc)
export(diff_)
export(duplicate_rows)
export(edf)
export(fadd_count)
export(farrange)
export(fcomplete)
export(fcount)
export(fdistinct)
export(fduplicates)
export(fduplicates2)
export(fexpand)
export(fgroup_by)
export(frename)
export(frowid)
export(fselect)
export(fslice)
export(fslice_head)
export(fslice_max)
export(fslice_min)
export(fslice_sample)
export(fslice_tail)
export(get_time_delay)
export(group_collapse)
export(group_id)
export(group_order)
export(growth)
export(growth_rate)
export(interval_count)
export(interval_end)
export(interval_length)
export(interval_range)
export(interval_start)
export(is_date)
export(is_datetime)
export(is_time)
export(is_time_interval)
export(is_time_or_num)
export(is_whole_number)
export(iso_week)
export(isoday)
export(lag_)
export(lag_seq)
export(lead_)
export(missing_dates)
export(n_missing_dates)
export(q_summarise)
export(reset_timeplyr_options)
export(roll_diff)
export(roll_geometric_mean)
export(roll_growth_rate)
export(roll_harmonic_mean)
export(roll_lag)
export(roll_mean)
export(roll_na_fill)
export(roll_sum)
export(rolling_growth)
export(row_id)
export(stat_summarise)
export(time_aggregate)
export(time_breaks)
export(time_by)
export(time_by_span)
export(time_by_units)
export(time_by_var)
export(time_complete)
export(time_completev)
export(time_countv)
export(time_cut)
export(time_diff)
export(time_elapsed)
export(time_episodes)
export(time_expand)
export(time_expandv)
export(time_gaps)
export(time_gcd_diff)
export(time_ggplot)
export(time_has_gaps)
export(time_id)
export(time_interval)
export(time_is_regular)
export(time_lag)
export(time_num_gaps)
export(time_roll_apply)
export(time_roll_growth_rate)
export(time_roll_mean)
export(time_roll_sum)
export(time_roll_window)
export(time_roll_window_size)
export(time_seq)
export(time_seq_id)
export(time_seq_sizes)
export(time_seq_v)
export(time_seq_v2)
export(time_span)
export(time_span_size)
export(time_summarisev)
export(ts_as_tibble)
export(unit_guess)
export(year_month)
export(year_quarter)
importFrom(data.table,":=")
importFrom(data.table,.GRP)
importFrom(data.table,.N)
importFrom(data.table,.SD)
importFrom(dplyr,"%>%")
importFrom(dplyr,.data)
importFrom(dplyr,across)
importFrom(dplyr,all_of)
importFrom(pillar,tbl_sum)
importFrom(pillar,type_sum)
importFrom(rlang,enquo)
importFrom(rlang,enquos)
importFrom(timechange,time_add)
useDynLib(timeplyr, .registration = TRUE)
